# Generated by Django 1.9.13 on 2017-09-13 13:50

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.hstore
import django.contrib.postgres.operations
import django.db.migrations.operations.special
import django.db.models.deletion
import django.db.models.manager
import image_cropping.fields
import mptt.fields
from django.conf import settings
from django.db import migrations, models

import events.models


def create_initial_licenses(apps, schema_editor):
    License = apps.get_model("events", "License")

    License.objects.create(
        id="event_only",
        name_fi="Vain tapahtuman markkinointiin",
        name_sv="Endast för marknadsföring av evenemanget",
        name_en="For event marketing only",
        url="",
    )

    License.objects.create(
        id="cc_by",
        name_fi="Nimeä 4.0 Kansainvälinen (CC BY 4.0)",
        name_sv="Erkännande 4.0 Internationell (CC BY 4.0)",
        name_en="Attribution 4.0 International (CC BY 4.0)",
        url="https://creativecommons.org/licenses/by/4.0/",
    )


class Migration(migrations.Migration):
    replaces = [
        ("events", "0001_initial"),
        ("events", "0002_auto_20150119_2138"),
        ("events", "0003_auto_20150607_1959"),
        ("events", "0004_auto_20150607_2003"),
        ("events", "0005_auto_20150607_2005"),
        ("events", "0006_auto_20150827_2020"),
        ("events", "0007_organization_admin_users"),
        ("events", "0008_auto_20151127_1019"),
        ("events", "0009_auto_20151129_0934"),
        ("events", "0010_add_in_languages"),
        ("events", "0011_add_event_image"),
        ("events", "0012_manytomany_audience"),
        ("events", "0013_keywordset"),
        ("events", "0014_auto_20160113_1920"),
        ("events", "0015_auto_20160205_1742"),
        ("events", "0016_auto_20160205_1754"),
        ("events", "0017_auto_20160208_1729"),
        ("events", "0018_move_legacy_event_image_urls"),
        ("events", "0019_remove_event_external_image_url"),
        ("events", "0020_image_name"),
        ("events", "0021_auto_20160217_1832"),
        ("events", "0022_auto_20160229_2111"),
        ("events", "0023_auto_20160506_1953"),
        ("events", "0024_add_deleted_field_to_event"),
        ("events", "0025_add_license_model"),
        ("events", "0026_minor_changes"),
        ("events", "0027_auto_20160819_1231"),
        ("events", "0028_add_api_keys_for_external_data_sources"),
        ("events", "0029_make_api_key_non_nullable"),
        ("events", "0028_add_photographer_name"),
        ("events", "0030_merge"),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DataSource",
            fields=[
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("name_fi", models.CharField(db_index=True, max_length=255, null=True)),
                ("name_sv", models.CharField(db_index=True, max_length=255, null=True)),
                ("name_en", models.CharField(db_index=True, max_length=255, null=True)),
                ("image", models.URLField(blank=True, null=True)),
                (
                    "origin_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=50, null=True
                    ),
                ),
                ("created_time", models.DateTimeField(blank=True, null=True)),
                ("last_modified_time", models.DateTimeField(blank=True, null=True)),
                (
                    "info_url",
                    models.URLField(blank=True, verbose_name="Event home page"),
                ),
                (
                    "info_url_fi",
                    models.URLField(
                        blank=True, null=True, verbose_name="Event home page"
                    ),
                ),
                (
                    "info_url_sv",
                    models.URLField(
                        blank=True, null=True, verbose_name="Event home page"
                    ),
                ),
                (
                    "info_url_en",
                    models.URLField(
                        blank=True, null=True, verbose_name="Event home page"
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("description_fi", models.TextField(blank=True, null=True)),
                ("description_sv", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("short_description", models.TextField(blank=True)),
                ("short_description_fi", models.TextField(blank=True, null=True)),
                ("short_description_sv", models.TextField(blank=True, null=True)),
                ("short_description_en", models.TextField(blank=True, null=True)),
                ("date_published", models.DateTimeField(blank=True, null=True)),
                (
                    "headline",
                    models.CharField(db_index=True, max_length=255, null=True),
                ),
                (
                    "headline_fi",
                    models.CharField(db_index=True, max_length=255, null=True),
                ),
                (
                    "headline_sv",
                    models.CharField(db_index=True, max_length=255, null=True),
                ),
                (
                    "headline_en",
                    models.CharField(db_index=True, max_length=255, null=True),
                ),
                (
                    "secondary_headline",
                    models.CharField(db_index=True, max_length=255, null=True),
                ),
                (
                    "secondary_headline_fi",
                    models.CharField(db_index=True, max_length=255, null=True),
                ),
                (
                    "secondary_headline_sv",
                    models.CharField(db_index=True, max_length=255, null=True),
                ),
                (
                    "secondary_headline_en",
                    models.CharField(db_index=True, max_length=255, null=True),
                ),
                ("provider", models.CharField(max_length=512, null=True)),
                ("provider_fi", models.CharField(max_length=512, null=True)),
                ("provider_sv", models.CharField(max_length=512, null=True)),
                ("provider_en", models.CharField(max_length=512, null=True)),
                (
                    "event_status",
                    models.SmallIntegerField(
                        choices=[
                            (1, "EventScheduled"),
                            (2, "EventCancelled"),
                            (3, "EventPostponed"),
                            (4, "EventRescheduled"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "location_extra_info",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                (
                    "location_extra_info_fi",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                (
                    "location_extra_info_sv",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                (
                    "location_extra_info_en",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                (
                    "start_time",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "end_time",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("has_start_time", models.BooleanField(default=True)),
                ("has_end_time", models.BooleanField(default=True)),
                ("is_recurring_super", models.BooleanField(default=False)),
                ("audience", models.CharField(blank=True, max_length=255, null=True)),
                ("lft", models.PositiveIntegerField(db_index=True, editable=False)),
                ("rght", models.PositiveIntegerField(db_index=True, editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(db_index=True, editable=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events_event_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.DJANGO_ORGHIERARCHY_DATASOURCE_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "event",
                "verbose_name_plural": "events",
            },
        ),
        migrations.CreateModel(
            name="EventAggregate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "super_event",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="aggregate",
                        to="events.Event",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventAggregateMember",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="events.Event"
                    ),
                ),
                (
                    "event_aggregate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="events.EventAggregate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventLink",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100)),
                ("link", models.URLField()),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="external_links",
                        to="events.Event",
                    ),
                ),
            ],
            bases=(models.Model, events.models.SimpleValueMixin),
        ),
        migrations.CreateModel(
            name="ExportInfo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "target_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                (
                    "target_system",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                ("last_exported_time", models.DateTimeField(blank=True, null=True)),
                ("object_id", models.CharField(max_length=50)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.ContentType",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Keyword",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("name_fi", models.CharField(db_index=True, max_length=255, null=True)),
                ("name_sv", models.CharField(db_index=True, max_length=255, null=True)),
                ("name_en", models.CharField(db_index=True, max_length=255, null=True)),
                ("image", models.URLField(blank=True, null=True)),
                (
                    "origin_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=50, null=True
                    ),
                ),
                ("created_time", models.DateTimeField(blank=True, null=True)),
                ("last_modified_time", models.DateTimeField(blank=True, null=True)),
                ("aggregate", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "keyword",
                "verbose_name_plural": "keywords",
            },
        ),
        migrations.CreateModel(
            name="KeywordLabel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.CharField(max_length=6, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=20, verbose_name="Name")),
                (
                    "name_fi",
                    models.CharField(max_length=20, null=True, verbose_name="Name"),
                ),
                (
                    "name_sv",
                    models.CharField(max_length=20, null=True, verbose_name="Name"),
                ),
                (
                    "name_en",
                    models.CharField(max_length=20, null=True, verbose_name="Name"),
                ),
            ],
            options={
                "verbose_name": "language",
                "verbose_name_plural": "languages",
            },
        ),
        migrations.CreateModel(
            name="Offer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "price",
                    models.CharField(blank=True, max_length=512, verbose_name="Price"),
                ),
                (
                    "price_fi",
                    models.CharField(
                        blank=True, max_length=512, null=True, verbose_name="Price"
                    ),
                ),
                (
                    "price_sv",
                    models.CharField(
                        blank=True, max_length=512, null=True, verbose_name="Price"
                    ),
                ),
                (
                    "price_en",
                    models.CharField(
                        blank=True, max_length=512, null=True, verbose_name="Price"
                    ),
                ),
                (
                    "info_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Web link to offer"
                    ),
                ),
                (
                    "info_url_fi",
                    models.URLField(
                        blank=True, null=True, verbose_name="Web link to offer"
                    ),
                ),
                (
                    "info_url_sv",
                    models.URLField(
                        blank=True, null=True, verbose_name="Web link to offer"
                    ),
                ),
                (
                    "info_url_en",
                    models.URLField(
                        blank=True, null=True, verbose_name="Web link to offer"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Offer description"
                    ),
                ),
                (
                    "description_fi",
                    models.TextField(
                        blank=True, null=True, verbose_name="Offer description"
                    ),
                ),
                (
                    "description_sv",
                    models.TextField(
                        blank=True, null=True, verbose_name="Offer description"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, null=True, verbose_name="Offer description"
                    ),
                ),
                ("is_free", models.BooleanField(default=False, verbose_name="Is free")),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offers",
                        to="events.Event",
                    ),
                ),
            ],
            bases=(models.Model, events.models.SimpleValueMixin),
        ),
        migrations.CreateModel(
            name="OpeningHoursSpecification",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("opens", models.TimeField(blank=True, null=True)),
                ("closes", models.TimeField(blank=True, null=True)),
                (
                    "days_of_week",
                    models.SmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "Monday"),
                            (2, "Tuesday"),
                            (3, "Wednesday"),
                            (4, "Thursday"),
                            (5, "Friday"),
                            (6, "Saturday"),
                            (7, "Sunday"),
                            (8, "PublicHolidays"),
                        ],
                        null=True,
                    ),
                ),
                ("valid_from", models.DateTimeField(blank=True, null=True)),
                ("valid_through", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "opening hour specification",
                "verbose_name_plural": "opening hour specifications",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("image", models.URLField(blank=True, null=True)),
                (
                    "origin_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=50, null=True
                    ),
                ),
                ("created_time", models.DateTimeField(blank=True, null=True)),
                ("last_modified_time", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events_organization_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.DJANGO_ORGHIERARCHY_DATASOURCE_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events_organization_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=255, verbose_name="Name"
                    ),
                ),
                (
                    "name_fi",
                    models.CharField(
                        db_index=True, max_length=255, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "name_sv",
                    models.CharField(
                        db_index=True, max_length=255, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        db_index=True, max_length=255, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "image",
                    models.URLField(blank=True, null=True, verbose_name="Image URL"),
                ),
                (
                    "origin_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=50, null=True
                    ),
                ),
                ("created_time", models.DateTimeField(blank=True, null=True)),
                ("last_modified_time", models.DateTimeField(blank=True, null=True)),
                (
                    "info_url",
                    models.URLField(null=True, verbose_name="Place home page"),
                ),
                (
                    "info_url_fi",
                    models.URLField(null=True, verbose_name="Place home page"),
                ),
                (
                    "info_url_sv",
                    models.URLField(null=True, verbose_name="Place home page"),
                ),
                (
                    "info_url_en",
                    models.URLField(null=True, verbose_name="Place home page"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_fi",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_sv",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "position",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=3067
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="E-mail"
                    ),
                ),
                ("telephone", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "telephone_fi",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "telephone_sv",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "telephone_en",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "contact_type",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Contact type",
                    ),
                ),
                (
                    "street_address",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "street_address_fi",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "street_address_sv",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "street_address_en",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_locality",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Address locality",
                    ),
                ),
                (
                    "address_locality_fi",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Address locality",
                    ),
                ),
                (
                    "address_locality_sv",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Address locality",
                    ),
                ),
                (
                    "address_locality_en",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Address locality",
                    ),
                ),
                (
                    "address_region",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Address region",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "post_office_box_num",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "address_country",
                    models.CharField(
                        blank=True, max_length=2, null=True, verbose_name="Country"
                    ),
                ),
                ("deleted", models.BooleanField(default=False, verbose_name="Deleted")),
                ("lft", models.PositiveIntegerField(db_index=True, editable=False)),
                ("rght", models.PositiveIntegerField(db_index=True, editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(db_index=True, editable=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events_place_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.DJANGO_ORGHIERARCHY_DATASOURCE_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events_place_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="events.Place",
                    ),
                ),
                (
                    "publisher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "place",
                "verbose_name_plural": "places",
            },
        ),
        migrations.AlterUniqueTogether(
            name="place",
            unique_together=set([("data_source", "origin_id")]),
        ),
        migrations.AddField(
            model_name="openinghoursspecification",
            name="place",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="opening_hours",
                to="events.Place",
            ),
        ),
        migrations.AddField(
            model_name="keywordlabel",
            name="language",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="events.Language"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="keywordlabel",
            unique_together=set([("name", "language")]),
        ),
        migrations.AddField(
            model_name="keyword",
            name="alt_labels",
            field=models.ManyToManyField(
                blank=True, related_name="keywords", to="events.KeywordLabel"
            ),
        ),
        migrations.AddField(
            model_name="keyword",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="events_keyword_created_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="keyword",
            name="data_source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.DJANGO_ORGHIERARCHY_DATASOURCE_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="keyword",
            name="last_modified_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="events_keyword_modified_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="exportinfo",
            unique_together=set([("target_system", "content_type", "object_id")]),
        ),
        migrations.AddField(
            model_name="eventlink",
            name="language",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="events.Language"
            ),
        ),
        migrations.AlterField(
            model_name="eventlink",
            name="name",
            field=models.CharField(blank=True, max_length=100, verbose_name="Name"),
        ),
        migrations.AlterUniqueTogether(
            name="eventlink",
            unique_together=set([("event", "language", "link")]),
        ),
        migrations.AddField(
            model_name="event",
            name="keywords",
            field=models.ManyToManyField(blank=True, null=True, to="events.Keyword"),
        ),
        migrations.AddField(
            model_name="event",
            name="last_modified_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="events_event_modified_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="location",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="events.Place",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="publisher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="published_events",
                to="events.Organization",
                verbose_name="Publisher",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="super_event",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sub_events",
                to="events.Event",
            ),
        ),
        migrations.AlterField(
            model_name="datasource",
            name="name",
            field=models.CharField(max_length=255, verbose_name="Name"),
        ),
        migrations.AlterField(
            model_name="event",
            name="audience",
            field=models.CharField(
                blank=True, max_length=255, null=True, verbose_name="Audience"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="date_published",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Date published"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="description",
            field=models.TextField(blank=True, null=True, verbose_name="Description"),
        ),
        migrations.AlterField(
            model_name="event",
            name="description_en",
            field=models.TextField(blank=True, null=True, verbose_name="Description"),
        ),
        migrations.AlterField(
            model_name="event",
            name="description_fi",
            field=models.TextField(blank=True, null=True, verbose_name="Description"),
        ),
        migrations.AlterField(
            model_name="event",
            name="description_sv",
            field=models.TextField(blank=True, null=True, verbose_name="Description"),
        ),
        migrations.AlterField(
            model_name="event",
            name="end_time",
            field=models.DateTimeField(
                blank=True, db_index=True, null=True, verbose_name="End time"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="event_status",
            field=models.SmallIntegerField(
                choices=[
                    (1, "EventScheduled"),
                    (2, "EventCancelled"),
                    (3, "EventPostponed"),
                    (4, "EventRescheduled"),
                ],
                default=1,
                verbose_name="Event status",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="headline",
            field=models.CharField(
                db_index=True, max_length=255, null=True, verbose_name="Headline"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="headline_en",
            field=models.CharField(
                db_index=True, max_length=255, null=True, verbose_name="Headline"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="headline_fi",
            field=models.CharField(
                db_index=True, max_length=255, null=True, verbose_name="Headline"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="headline_sv",
            field=models.CharField(
                db_index=True, max_length=255, null=True, verbose_name="Headline"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="image",
            field=models.URLField(blank=True, null=True, verbose_name="Image URL"),
        ),
        migrations.AlterField(
            model_name="event",
            name="info_url",
            field=models.URLField(
                blank=True, null=True, verbose_name="Event home page"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="location_extra_info",
            field=models.CharField(
                blank=True,
                max_length=400,
                null=True,
                verbose_name="Location extra info",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="location_extra_info_en",
            field=models.CharField(
                blank=True,
                max_length=400,
                null=True,
                verbose_name="Location extra info",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="location_extra_info_fi",
            field=models.CharField(
                blank=True,
                max_length=400,
                null=True,
                verbose_name="Location extra info",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="location_extra_info_sv",
            field=models.CharField(
                blank=True,
                max_length=400,
                null=True,
                verbose_name="Location extra info",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="name",
            field=models.CharField(db_index=True, max_length=255, verbose_name="Name"),
        ),
        migrations.AlterField(
            model_name="event",
            name="name_en",
            field=models.CharField(
                db_index=True, max_length=255, null=True, verbose_name="Name"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="name_fi",
            field=models.CharField(
                db_index=True, max_length=255, null=True, verbose_name="Name"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="name_sv",
            field=models.CharField(
                db_index=True, max_length=255, null=True, verbose_name="Name"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="origin_id",
            field=models.CharField(
                blank=True,
                db_index=True,
                max_length=50,
                null=True,
                verbose_name="Origin ID",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="provider",
            field=models.CharField(max_length=512, null=True, verbose_name="Provider"),
        ),
        migrations.AlterField(
            model_name="event",
            name="provider_en",
            field=models.CharField(max_length=512, null=True, verbose_name="Provider"),
        ),
        migrations.AlterField(
            model_name="event",
            name="provider_fi",
            field=models.CharField(max_length=512, null=True, verbose_name="Provider"),
        ),
        migrations.AlterField(
            model_name="event",
            name="provider_sv",
            field=models.CharField(max_length=512, null=True, verbose_name="Provider"),
        ),
        migrations.AlterField(
            model_name="event",
            name="secondary_headline",
            field=models.CharField(
                db_index=True,
                max_length=255,
                null=True,
                verbose_name="Secondary headline",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="secondary_headline_en",
            field=models.CharField(
                db_index=True,
                max_length=255,
                null=True,
                verbose_name="Secondary headline",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="secondary_headline_fi",
            field=models.CharField(
                db_index=True,
                max_length=255,
                null=True,
                verbose_name="Secondary headline",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="secondary_headline_sv",
            field=models.CharField(
                db_index=True,
                max_length=255,
                null=True,
                verbose_name="Secondary headline",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="short_description",
            field=models.TextField(
                blank=True, null=True, verbose_name="Short description"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="short_description_en",
            field=models.TextField(
                blank=True, null=True, verbose_name="Short description"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="short_description_fi",
            field=models.TextField(
                blank=True, null=True, verbose_name="Short description"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="short_description_sv",
            field=models.TextField(
                blank=True, null=True, verbose_name="Short description"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="start_time",
            field=models.DateTimeField(
                blank=True, db_index=True, null=True, verbose_name="Start time"
            ),
        ),
        migrations.AlterField(
            model_name="keyword",
            name="image",
            field=models.URLField(blank=True, null=True, verbose_name="Image URL"),
        ),
        migrations.AlterField(
            model_name="keyword",
            name="name",
            field=models.CharField(db_index=True, max_length=255, verbose_name="Name"),
        ),
        migrations.AlterField(
            model_name="keyword",
            name="name_en",
            field=models.CharField(
                db_index=True, max_length=255, null=True, verbose_name="Name"
            ),
        ),
        migrations.AlterField(
            model_name="keyword",
            name="name_fi",
            field=models.CharField(
                db_index=True, max_length=255, null=True, verbose_name="Name"
            ),
        ),
        migrations.AlterField(
            model_name="keyword",
            name="name_sv",
            field=models.CharField(
                db_index=True, max_length=255, null=True, verbose_name="Name"
            ),
        ),
        migrations.AlterField(
            model_name="keyword",
            name="origin_id",
            field=models.CharField(
                blank=True,
                db_index=True,
                max_length=50,
                null=True,
                verbose_name="Origin ID",
            ),
        ),
        migrations.AlterField(
            model_name="keywordlabel",
            name="name",
            field=models.CharField(db_index=True, max_length=255, verbose_name="Name"),
        ),
        migrations.AlterField(
            model_name="organization",
            name="image",
            field=models.URLField(blank=True, null=True, verbose_name="Image URL"),
        ),
        migrations.AlterField(
            model_name="organization",
            name="name",
            field=models.CharField(db_index=True, max_length=255, verbose_name="Name"),
        ),
        migrations.AlterField(
            model_name="organization",
            name="origin_id",
            field=models.CharField(
                blank=True,
                db_index=True,
                max_length=50,
                null=True,
                verbose_name="Origin ID",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="origin_id",
            field=models.CharField(
                blank=True,
                db_index=True,
                max_length=50,
                null=True,
                verbose_name="Origin ID",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="post_office_box_num",
            field=models.CharField(
                blank=True, max_length=128, null=True, verbose_name="PO BOX"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="postal_code",
            field=models.CharField(
                blank=True, max_length=128, null=True, verbose_name="Postal code"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="publisher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="events.Organization",
                verbose_name="Publisher",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="street_address",
            field=models.CharField(
                blank=True, max_length=255, null=True, verbose_name="Street address"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="street_address_en",
            field=models.CharField(
                blank=True, max_length=255, null=True, verbose_name="Street address"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="street_address_fi",
            field=models.CharField(
                blank=True, max_length=255, null=True, verbose_name="Street address"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="street_address_sv",
            field=models.CharField(
                blank=True, max_length=255, null=True, verbose_name="Street address"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="telephone",
            field=models.CharField(
                blank=True, max_length=128, null=True, verbose_name="Telephone"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="telephone_en",
            field=models.CharField(
                blank=True, max_length=128, null=True, verbose_name="Telephone"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="telephone_fi",
            field=models.CharField(
                blank=True, max_length=128, null=True, verbose_name="Telephone"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="telephone_sv",
            field=models.CharField(
                blank=True, max_length=128, null=True, verbose_name="Telephone"
            ),
        ),
        django.contrib.postgres.operations.HStoreExtension(),
        migrations.AddField(
            model_name="event",
            name="custom_data",
            field=django.contrib.postgres.fields.hstore.HStoreField(null=True),
        ),
        migrations.AddField(
            model_name="place",
            name="custom_data",
            field=django.contrib.postgres.fields.hstore.HStoreField(null=True),
        ),
        migrations.AlterField(
            model_name="event",
            name="image",
            field=models.URLField(
                blank=True, max_length=400, null=True, verbose_name="Image URL"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="keywords",
            field=models.ManyToManyField(to="events.Keyword"),
        ),
        migrations.RemoveField(
            model_name="keyword",
            name="image",
        ),
        migrations.RemoveField(
            model_name="organization",
            name="image",
        ),
        migrations.AlterField(
            model_name="place",
            name="image",
            field=models.URLField(
                blank=True, max_length=400, null=True, verbose_name="Image URL"
            ),
        ),
        migrations.AddField(
            model_name="organization",
            name="admin_users",
            field=models.ManyToManyField(
                blank=True,
                related_name="admin_organizations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="in_language",
            field=models.ManyToManyField(
                blank=True,
                related_name="events",
                to="events.Language",
                verbose_name="In language",
            ),
        ),
        migrations.AlterModelManagers(
            name="event",
            managers=[
                ("objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="place",
            managers=[
                ("geo_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.RemoveField(
            model_name="place",
            name="image",
        ),
        migrations.RenameField(
            model_name="event",
            old_name="image",
            new_name="external_image_url",
        ),
        migrations.RemoveField(
            model_name="event",
            name="audience",
        ),
        migrations.AddField(
            model_name="event",
            name="audience",
            field=models.ManyToManyField(
                blank=True, related_name="audiences", to="events.Keyword"
            ),
        ),
        migrations.CreateModel(
            name="KeywordSet",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=255, verbose_name="Name"
                    ),
                ),
                (
                    "name_fi",
                    models.CharField(
                        db_index=True, max_length=255, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "name_sv",
                    models.CharField(
                        db_index=True, max_length=255, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        db_index=True, max_length=255, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "origin_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        null=True,
                        verbose_name="Origin ID",
                    ),
                ),
                ("created_time", models.DateTimeField(blank=True, null=True)),
                ("last_modified_time", models.DateTimeField(blank=True, null=True)),
                (
                    "usage",
                    models.SmallIntegerField(
                        choices=[(1, "any"), (2, "keyword"), (3, "audience")],
                        default=1,
                        verbose_name="Intended keyword usage",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events_keywordset_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.DJANGO_ORGHIERARCHY_DATASOURCE_MODEL,
                    ),
                ),
                (
                    "keywords",
                    models.ManyToManyField(related_name="sets", to="events.Keyword"),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events_keywordset_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.Organization",
                        verbose_name="Organization which uses this set",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="event",
            name="publication_status",
            field=models.SmallIntegerField(
                choices=[(1, "public"), (2, "draft")],
                default=1,
                verbose_name="Event data publication status",
            ),
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_time", models.DateTimeField(auto_now_add=True)),
                ("last_modified_time", models.DateTimeField(auto_now=True)),
                ("image", models.ImageField(blank=True, null=True, upload_to="images")),
                (
                    "url",
                    models.URLField(
                        blank=True, max_length=400, null=True, verbose_name="Image"
                    ),
                ),
                (
                    "cropping",
                    image_cropping.fields.ImageRatioField(
                        "image",
                        "800x800",
                        adapt_rotation=False,
                        allow_fullsize=False,
                        free_crop=False,
                        help_text=None,
                        hide_image_field=False,
                        size_warning=False,
                        verbose_name="Cropping",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EventImage_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EventImage_last_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "publisher",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Published_images",
                        to="events.Organization",
                        verbose_name="Publisher",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="events.Image",
                verbose_name="Image",
            ),
        ),
        migrations.AddField(
            model_name="keyword",
            name="image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="events.Image",
                verbose_name="Image",
            ),
        ),
        migrations.AddField(
            model_name="keywordset",
            name="image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="events.Image",
                verbose_name="Image",
            ),
        ),
        migrations.AddField(
            model_name="organization",
            name="image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="events.Image",
                verbose_name="Image",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="events.Image",
                verbose_name="Image",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="external_image_url",
            field=models.URLField(blank=True, max_length=400, null=True),
        ),
        migrations.RemoveField(
            model_name="event",
            name="external_image_url",
        ),
        migrations.AddField(
            model_name="image",
            name="name",
            field=models.CharField(
                db_index=True, default="", max_length=255, verbose_name="Name"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="eventlink",
            unique_together=set([("name", "event", "language", "link")]),
        ),
        migrations.AlterModelManagers(
            name="event",
            managers=[],
        ),
        migrations.AlterModelManagers(
            name="place",
            managers=[],
        ),
        migrations.AlterField(
            model_name="event",
            name="image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="events.Image",
                verbose_name="Image",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="location",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="events.Place",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="publisher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="published_events",
                to="events.Organization",
                verbose_name="Publisher",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="super_event",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sub_events",
                to="events.Event",
            ),
        ),
        migrations.AlterField(
            model_name="keyword",
            name="image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="events.Image",
                verbose_name="Image",
            ),
        ),
        migrations.AlterField(
            model_name="keywordset",
            name="image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="events.Image",
                verbose_name="Image",
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="events.Image",
                verbose_name="Image",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="events.Image",
                verbose_name="Image",
            ),
        ),
        migrations.AlterModelManagers(
            name="event",
            managers=[
                ("objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="place",
            managers=[
                ("geo_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="deleted",
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.CreateModel(
            name="License",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "name_fi",
                    models.CharField(max_length=255, null=True, verbose_name="Name"),
                ),
                (
                    "name_sv",
                    models.CharField(max_length=255, null=True, verbose_name="Name"),
                ),
                (
                    "name_en",
                    models.CharField(max_length=255, null=True, verbose_name="Name"),
                ),
                ("url", models.URLField(blank=True, verbose_name="Url")),
            ],
            options={
                "verbose_name": "License",
                "verbose_name_plural": "Licenses",
            },
        ),
        migrations.AlterModelOptions(
            name="organization",
            options={
                "ordering": ("name",),
                "verbose_name": "organization",
                "verbose_name_plural": "organizations",
            },
        ),
        migrations.AddField(
            model_name="image",
            name="license",
            field=models.ForeignKey(
                default="cc_by",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="images",
                to="events.License",
                verbose_name="License",
            ),
        ),
        migrations.RunPython(
            code=create_initial_licenses,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AlterField(
            model_name="event",
            name="custom_data",
            field=django.contrib.postgres.fields.hstore.HStoreField(
                blank=True, null=True
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="custom_data",
            field=django.contrib.postgres.fields.hstore.HStoreField(
                blank=True, null=True
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="info_url",
            field=models.URLField(
                blank=True, default="", verbose_name="Place home page"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="info_url_en",
            field=models.URLField(
                blank=True, default="", null=True, verbose_name="Place home page"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="info_url_fi",
            field=models.URLField(
                blank=True, default="", null=True, verbose_name="Place home page"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="info_url_sv",
            field=models.URLField(
                blank=True, default="", null=True, verbose_name="Place home page"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="info_url",
            field=models.URLField(
                blank=True, max_length=1000, null=True, verbose_name="Event home page"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="info_url_en",
            field=models.URLField(
                blank=True, max_length=1000, null=True, verbose_name="Event home page"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="info_url_fi",
            field=models.URLField(
                blank=True, max_length=1000, null=True, verbose_name="Event home page"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="info_url_sv",
            field=models.URLField(
                blank=True, max_length=1000, null=True, verbose_name="Event home page"
            ),
        ),
        migrations.AlterField(
            model_name="offer",
            name="info_url",
            field=models.URLField(
                blank=True, max_length=1000, null=True, verbose_name="Web link to offer"
            ),
        ),
        migrations.AlterField(
            model_name="offer",
            name="info_url_en",
            field=models.URLField(
                blank=True, max_length=1000, null=True, verbose_name="Web link to offer"
            ),
        ),
        migrations.AlterField(
            model_name="offer",
            name="info_url_fi",
            field=models.URLField(
                blank=True, max_length=1000, null=True, verbose_name="Web link to offer"
            ),
        ),
        migrations.AlterField(
            model_name="offer",
            name="info_url_sv",
            field=models.URLField(
                blank=True, max_length=1000, null=True, verbose_name="Web link to offer"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="info_url",
            field=models.URLField(
                blank=True, default="", max_length=1000, verbose_name="Place home page"
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="info_url_en",
            field=models.URLField(
                blank=True,
                default="",
                max_length=1000,
                null=True,
                verbose_name="Place home page",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="info_url_fi",
            field=models.URLField(
                blank=True,
                default="",
                max_length=1000,
                null=True,
                verbose_name="Place home page",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="info_url_sv",
            field=models.URLField(
                blank=True,
                default="",
                max_length=1000,
                null=True,
                verbose_name="Place home page",
            ),
        ),
        migrations.AddField(
            model_name="datasource",
            name="api_key",
            field=models.CharField(blank=True, default="", max_length=128),
        ),
        migrations.AddField(
            model_name="datasource",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owned_system",
                to="events.Organization",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="data_source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provided_%(class)s_data",
                to=settings.DJANGO_ORGHIERARCHY_DATASOURCE_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="keyword",
            name="data_source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provided_%(class)s_data",
                to=settings.DJANGO_ORGHIERARCHY_DATASOURCE_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="keywordset",
            name="data_source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provided_%(class)s_data",
                to=settings.DJANGO_ORGHIERARCHY_DATASOURCE_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="data_source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provided_organization_data",
                to=settings.DJANGO_ORGHIERARCHY_DATASOURCE_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="data_source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provided_%(class)s_data",
                to=settings.DJANGO_ORGHIERARCHY_DATASOURCE_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="image",
            name="photographer_name",
            field=models.CharField(
                blank=True, max_length=255, null=True, verbose_name="Photographer name"
            ),
        ),
    ]
