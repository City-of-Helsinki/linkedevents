# Generated by Django 2.2.9 on 2020-02-04 10:04

from django.contrib.auth.models import Group, Permission
from django.db import migrations, transaction
from django.db.utils import IntegrityError


def create_light_admin_group():
    try:
        # If "Light Admins" already exists, migration causes
        # django.db.transaction.TransactionManagementError
        # without transaction.atomic().
        with transaction.atomic():
            light_admin_group = Group.objects.create(name='Light Admins')
    except IntegrityError:
        print('\nGroup with name "Light Admins" already exists. Skipping creation.')
        return
    try:
        regular_users_perm = Permission.objects.get(codename='change_organization_regular_users')
        view_user = Permission.objects.get(codename='view_user')
    except Permission.DoesNotExist:
        print('\nMissing permissions. Skipping creation.')
        return
    light_admin_group.permissions.set([regular_users_perm, view_user])


def forwards(apps, schema_editor):
    create_light_admin_group()


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0073_soft_delete_replaced_objects'),
        ('django_orghierarchy', '0009_add_change_organization_regular_users_permission'),
        ('helevents', '0001_initial')
    ]

    operations = [
        migrations.RunPython(forwards, migrations.RunPython.noop)
    ]
