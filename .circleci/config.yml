---

version: 2.1

aliases:
  # Remember to update the site_packages_path if you update the python version
  # lxml doesn't yet have a Python 3.8 wheel package so use Python 3.7 instead
  - &python_image_version 3.7.6
  # The tilde (home path) has been removed since it doesn't work in docker commands in test_ci.sh
  - &site_packages_path .local/lib/python3.7/site-packages

  - &builder_image_version 6c86b7f0df29fc8db89978f8d83483f2372b203f
  - &ubuntu_base_image_version 6c86b7f0df29fc8db89978f8d83483f2372b203f

  - &workspace_root ~/repo

  - &attach_workspace
    attach_workspace:
      at: *workspace_root

  - &repo_cache_key v1-repo-{{ .Branch }}-{{ .Revision }}

  - &restore_repo
    restore_cache:
      keys:
        - *repo_cache_key

  - &deps_cache_key "
    v1-python-deps-\
    {{ checksum \".circleci/config.yml\" }}-\
    {{ checksum \"requirements-dev.in\" }}-\
    {{ checksum \"requirements-dev.txt\" }}-\
    {{ checksum \"requirements.in\" }}-\
    {{ checksum \"requirements.txt\" }}"

  - &restore_deps
    restore_cache:
      keys:
        - *deps_cache_key

executors:
  python:
    parameters:
      python_image_version:
        type: string
        default: *python_image_version
    docker:
      - image: circleci/python:<< parameters.python_image_version >>
    working_directory: *workspace_root

  builder:
    parameters:
      builder_image_version:
        type: string
        default: *builder_image_version
      ubuntu_base_image_version:
        type: string
        default: *ubuntu_base_image_version
    docker:
      - image: 307238562370.dkr.ecr.eu-west-1.amazonaws.com/voltti/builder-aws:<< parameters.builder_image_version >>
    working_directory: *workspace_root
    environment:
      DOCKER_IMAGE_NAME: espooevents/service
      # Ubuntu image version
      BASE_IMAGE_VERSION: << parameters.ubuntu_base_image_version >>

jobs:
  checkout_code:
    executor: python
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: *repo_cache_key
          paths:
            - .

  install_deps:
    parameters:
      site_packages_path:
        type: string
        default: *site_packages_path
    executor: python
    steps:
      - *restore_repo
      - *restore_deps
      - run:
          name: Install dependencies
          command: |
            pip install --user pip-tools
            pip-sync --user requirements-dev.txt requirements.txt
      - save_cache:
          key: *deps_cache_key
          paths:
            - ~/.local/bin
            - ~/<< parameters.site_packages_path >>

  lint:
    executor: python
    steps:
      - *restore_repo
      - *restore_deps
      - run: flake8 .

  test:
    executor: builder
    environment:
      PYTHON_IMAGE_VERSION: *python_image_version
      SITE_PACKAGES_PATH: *site_packages_path
      POSTGRES_USER: linkedevents
      POSTGRES_PASSWORD: linkedevents
      POSTGRES_DB: linkedevents
    steps:
      - *restore_repo
      - *restore_deps
      - setup_remote_docker
      - run:
          name: Docker login to ECR
          command: ecr-login
      - run:
          name: Run test script
          command: ./test_ci.sh

  dockerize:
    executor: builder
    steps:
      - *attach_workspace
      - *restore_repo
      - setup_remote_docker
      - run:
          name: Docker login to ECR
          command: ecr-login
      - run:
          name: Build docker image
          command: |
            docker build \
              -f Dockerfile.dist \
              -t $DOCKER_IMAGE_NAME \
              --build-arg build=$CIRCLE_BUILD_NUM \
              --build-arg commit=$CIRCLE_SHA1 \
              --build-arg BASE_IMAGE_VERSION=$BASE_IMAGE_VERSION \
              .
      - run:
          name: Tag and push docker image
          command: ecr-push "${DOCKER_IMAGE_NAME}"

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - checkout_code
      - install_deps:
          requires:
            - checkout_code
      - lint:
          requires:
            - install_deps
      - test:
          context: org-global
          requires:
            - install_deps
      - dockerize:
          context: org-global
          requires:
            - lint
            - test
